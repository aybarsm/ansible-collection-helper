---
- name: Ensure Hetzner Cloud Token is set
  ansible.builtin.assert:
    that: token_env or token_var
    fail_msg: "HCLOUD_TOKEN is not set in environment or vars."
    success_msg: "HCLOUD_TOKEN is found."
  vars:
    token_env: lookup('ansible.builtin.env', 'HCLOUD_TOKEN', default=undef()) is not undefined
    token_var: lookup('ansible.builtin.vars', 'HCLOUD_TOKEN', default=undef()) is not undefined
  delegate_to: localhost
  run_once: true
  register: provider__assert_hcloud_token

- name: Gather Hetzner Cloud info
  block:
    #TODO: Complete Hetzner Cloud info gathering tasks
    - name: Gather Hetzner Cloud Server info
      hetzner.hcloud.server_info:
        api_token: "{{ api_token }}"
      register: provider__hcloud_info_server
    - name: Gather Hetzner Cloud Network info
      hetzner.hcloud.network_info:
        api_token: "{{ api_token }}"
      register: provider__hcloud_info_network
    - name: Set main fact for Hetzner Cloud provider
      ansible.builtin.set_fact:
        __provider__info: "{{ __provider__info | default({}) | combine({'hcloud': info_hcloud}) }}"
      vars:
        info_hcloud:
          server: "{{ provider__hcloud_info_server.hcloud_server_info }}"
          network: "{{ provider__hcloud_info_network.hcloud_network_info }}"
      register: provider__hcloud_set_info
  vars:
    api_token: "{{ lookup('ansible.builtin.env', 'HCLOUD_TOKEN', default=lookup('ansible.builtin.vars', 'HCLOUD_TOKEN')) }}"
  delegate_to: localhost
  run_once: true
  when: provider__assert_hcloud_token is success